-- =====================================================
-- VERIFICACI√ìN SIMPLE DEL SISTEMA DE AUTOMATIZACI√ìN
-- =====================================================
-- Script simplificado para verificar que todo est√© funcionando

-- =====================================================
-- 1. VERIFICAR TABLAS
-- =================================================

SELECT 'Verificando tablas...' as status;

-- Verificar cada tabla individualmente
SELECT 
    'project_workflows' as tabla,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'project_workflows') 
        THEN '‚úÖ EXISTE' 
        ELSE '‚ùå NO EXISTE' 
    END as estado
UNION ALL
SELECT 
    'workflow_steps' as tabla,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'workflow_steps') 
        THEN '‚úÖ EXISTE' 
        ELSE '‚ùå NO EXISTE' 
    END as estado
UNION ALL
SELECT 
    'workflow_executions' as tabla,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'workflow_executions') 
        THEN '‚úÖ EXISTE' 
        ELSE '‚ùå NO EXISTE' 
    END as estado
UNION ALL
SELECT 
    'system_triggers' as tabla,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'system_triggers') 
        THEN '‚úÖ EXISTE' 
        ELSE '‚ùå NO EXISTE' 
    END as estado
UNION ALL
SELECT 
    'automation_tasks' as tabla,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'automation_tasks') 
        THEN '‚úÖ EXISTE' 
        ELSE '‚ùå NO EXISTE' 
    END as estado
UNION ALL
SELECT 
    'automation_logs' as tabla,
    CASE 
        WHEN EXISTS (SELECT 1 FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'automation_logs') 
        THEN '‚úÖ EXISTE' 
        ELSE '‚ùå NO EXISTE' 
    END as estado;

-- =====================================================
-- 2. VERIFICAR POL√çTICAS RLS
-- =================================================

SELECT 'Verificando pol√≠ticas RLS...' as status;

SELECT 
    tablename,
    policyname,
    cmd,
    CASE 
        WHEN cmd = 'SELECT' THEN 'üîç Lectura'
        WHEN cmd = 'INSERT' THEN '‚ûï Inserci√≥n'
        WHEN cmd = 'UPDATE' THEN '‚úèÔ∏è Actualizaci√≥n'
        WHEN cmd = 'DELETE' THEN 'üóëÔ∏è Eliminaci√≥n'
        ELSE cmd
    END as tipo_permiso
FROM pg_policies 
WHERE schemaname = 'public' 
AND tablename IN (
    'project_workflows', 
    'workflow_steps', 
    'workflow_executions', 
    'system_triggers', 
    'automation_tasks', 
    'automation_logs'
)
ORDER BY tablename, cmd;

-- =====================================================
-- 3. VERIFICAR FUNCIONES
-- =================================================

SELECT 'Verificando funciones...' as status;

SELECT 
    proname as funcion,
    CASE 
        WHEN proname = 'execute_sql_script' THEN '‚úÖ EXISTE'
        WHEN proname = 'update_updated_at_column' THEN '‚úÖ EXISTE'
        ELSE '‚ùì DESCONOCIDA'
    END as estado
FROM pg_proc 
WHERE proname IN ('execute_sql_script', 'update_updated_at_column');

-- =====================================================
-- 4. VERIFICAR TRIGGERS
-- =================================================

SELECT 'Verificando triggers...' as status;

SELECT 
    t.tgname as trigger,
    c.relname as tabla,
    CASE 
        WHEN t.tgname LIKE 'update_%_updated_at' THEN '‚úÖ TIMESTAMP'
        ELSE 'üîß OTRO'
    END as tipo
FROM pg_trigger t
JOIN pg_class c ON t.tgrelid = c.oid
JOIN pg_namespace n ON c.relnamespace = n.oid
WHERE n.nspname = 'public' 
AND t.tgname LIKE 'update_%_updated_at';

-- =====================================================
-- 5. VERIFICAR ESTADO DE LAS TABLAS
-- =================================================

SELECT 'Verificando estado de las tablas...' as status;

-- Contar registros en cada tabla (deber√≠an estar vac√≠as inicialmente)
SELECT 
    'project_workflows' as tabla,
    COUNT(*) as registros,
    CASE 
        WHEN COUNT(*) = 0 THEN '‚úÖ VAC√çA (correcto)'
        ELSE '‚ö†Ô∏è CON DATOS'
    END as estado
FROM project_workflows
UNION ALL
-- Contar triggers
SELECT 
    'system_triggers' as tabla,
    COUNT(*) as registros,
    CASE 
        WHEN COUNT(*) = 0 THEN '‚úÖ VAC√çA (correcto)'
        ELSE '‚ö†Ô∏è CON DATOS'
    END as estado
FROM system_triggers
UNION ALL
-- Contar tareas
SELECT 
    'automation_tasks' as tabla,
    COUNT(*) as registros,
    CASE 
        WHEN COUNT(*) = 0 THEN '‚úÖ VAC√çA (correcto)'
        ELSE '‚ö†Ô∏è CON DATOS'
    END as estado
FROM automation_tasks;

-- =====================================================
-- 6. VERIFICAR √çNDICES
-- =================================================

SELECT 'Verificando √≠ndices...' as status;

SELECT 
    indexname as indice,
    tablename as tabla,
    CASE 
        WHEN indexname LIKE 'idx_%' THEN '‚úÖ OPTIMIZACI√ìN'
        ELSE 'üîß OTRO'
    END as tipo
FROM pg_indexes 
WHERE schemaname = 'public' 
AND indexname LIKE 'idx_%'
ORDER BY tablename, indexname;

-- =====================================================
-- 7. PRUEBA DE FUNCIONALIDAD
-- =================================================

SELECT 'Probando funcionalidad...' as status;

-- Intentar insertar un log de prueba
DO $$
DECLARE
    log_id UUID;
BEGIN
    -- Insertar log de prueba
    INSERT INTO automation_logs (
        automation_type, 
        action, 
        message, 
        status
    ) VALUES (
        'test', 
        'Verificaci√≥n del sistema', 
        'Prueba de inserci√≥n exitosa', 
        'success'
    ) RETURNING id INTO log_id;
    
    -- Mostrar confirmaci√≥n
    RAISE NOTICE '‚úÖ Prueba de inserci√≥n exitosa - Log ID: %', log_id;
    
    -- Limpiar log de prueba
    DELETE FROM automation_logs WHERE id = log_id;
    RAISE NOTICE 'üßπ Log de prueba eliminado correctamente';
    
EXCEPTION
    WHEN OTHERS THEN
        RAISE WARNING '‚ö†Ô∏è Error en prueba de inserci√≥n: %', SQLERRM;
END $$;

-- =====================================================
-- 8. RESUMEN FINAL
-- =================================================

SELECT 'RESUMEN DE VERIFICACI√ìN' as titulo;

-- Contar total de elementos verificados
SELECT 
    'TABLAS' as categoria,
    COUNT(*) as total,
    '6 esperadas' as esperado
FROM information_schema.tables 
WHERE table_schema = 'public' 
AND table_name IN (
    'project_workflows', 
    'workflow_steps', 
    'workflow_executions', 
    'system_triggers', 
    'automation_tasks', 
    'automation_logs'
)
UNION ALL
SELECT 
    'POL√çTICAS RLS' as categoria,
    COUNT(*) as total,
    '20+ esperadas' as esperado
FROM pg_policies 
WHERE schemaname = 'public' 
AND tablename IN (
    'project_workflows', 
    'workflow_steps', 
    'workflow_executions', 
    'system_triggers', 
    'automation_tasks', 
    'automation_logs'
)
UNION ALL
SELECT 
    'FUNCIONES' as categoria,
    COUNT(*) as total,
    '2 esperadas' as esperado
FROM pg_proc 
WHERE proname IN ('execute_sql_script', 'update_updated_at_column')
UNION ALL
SELECT 
    'TRIGGERS' as categoria,
    COUNT(*) as total,
    '3+ esperados' as esperado
FROM pg_trigger t
JOIN pg_class c ON t.tgrelid = c.oid
JOIN pg_namespace n ON c.relnamespace = n.oid
WHERE n.nspname = 'public' 
AND t.tgname LIKE 'update_%_updated_at';

-- =====================================================
-- 9. MENSAJE FINAL
-- =================================================

DO $$
BEGIN
    RAISE NOTICE '';
    RAISE NOTICE '=====================================================';
    RAISE NOTICE 'üîç VERIFICACI√ìN COMPLETADA DEL SISTEMA DE AUTOMATIZACI√ìN';
    RAISE NOTICE '=====================================================';
    RAISE NOTICE '';
    RAISE NOTICE 'üìä Si ves ‚úÖ en todas las verificaciones, el sistema est√° funcionando correctamente';
    RAISE NOTICE '‚ö†Ô∏è Si ves ‚ö†Ô∏è o ‚ùå, revisa los mensajes de error arriba';
    RAISE NOTICE '';
    RAISE NOTICE 'üöÄ ¬°Tu Sistema de Automatizaci√≥n est√° listo para usar!';
    RAISE NOTICE '';
END $$;
